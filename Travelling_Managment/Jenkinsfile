pipeline {
    agent any
    stages {
        stage('Checking Containers') {
            steps {
                sh 'sudo docker ps'
            }
        }
        stage('Closing and Cleaning Last Run'){
            steps{
                script {
                    // Check if 'server' and 'mysql_server' services are running
                    def servicesRunning = sh(script: "sudo docker ps --filter name=server --filter name=mysql_server -q", returnStdout: true).trim()

                    // If the services are found, the output will contain their IDs
                    if (servicesRunning) {
                        echo "Found running services: ${servicesRunning}"
                        // Run commands to stop the services and remove the volume
                        sh 'sudo docker-compose down'
                        sh 'sudo docker volume rm docker_pipeline_db_data'
                    } else {
                        echo "No matching services found. Skipping cleanup."
                    }
                }
            }
        }
        stage('Running the new DockerCompose'){
            steps{
                sh 'sudo docker-compose build'
                sh 'sudo docker-compose up'
            }
        }
    }
}
